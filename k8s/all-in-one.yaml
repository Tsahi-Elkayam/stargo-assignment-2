apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: bitcoin-exporter-config
  namespace: monitoring
data:
  app-config.yaml: |
    app:
      name: bitcoin-price-monitor
      version: 1.0.0
      environment: production
    exporter:
      port: 8000
      interval: 60
      timeout: 30
    api:
      provider: coindesk
      endpoint: https://api.coindesk.com/v1/bpi/currentprice.json
      retry:
        max_attempts: 3
        backoff: 2
    metrics:
      namespace: bitcoin
      subsystem: price
    logging:
      level: INFO
      format: json
  labels.yaml: |
    dashboard:
      title: "Bitcoin Price Monitor"
      subtitle: "Real-time metrics"
  metrics.yaml: |
    metrics:
      - name: bitcoin_price
        type: gauge
        description: "Bitcoin price in USD"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bitcoin-exporter
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bitcoin-exporter
  template:
    metadata:
      labels:
        app: bitcoin-exporter
    spec:
      containers:
      - name: bitcoin-exporter
        image: bitcoin-exporter:latest
        imagePullPolicy: Never  # Use local image
        ports:
        - containerPort: 8000
          name: metrics
        env:
        - name: ENV
          value: "production"
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
      volumes:
      - name: config
        configMap:
          name: bitcoin-exporter-config
---
apiVersion: v1
kind: Service
metadata:
  name: bitcoin-exporter
  namespace: monitoring
spec:
  type: NodePort
  ports:
  - port: 8000
    targetPort: 8000
    nodePort: 30800
    protocol: TCP
    name: metrics
  selector:
    app: bitcoin-exporter
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: config
          mountPath: /etc/prometheus
        - name: data
          mountPath: /prometheus
      volumes:
      - name: config
        configMap:
          name: prometheus-config
      - name: data
        emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 60s
      evaluation_interval: 60s
    scrape_configs:
      - job_name: 'bitcoin-exporter'
        static_configs:
          - targets: ['bitcoin-exporter:8000']
        scrape_interval: 60s
        scrape_timeout: 10s
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: monitoring
spec:
  type: NodePort
  ports:
  - port: 9090
    targetPort: 9090
    nodePort: 30900
    protocol: TCP
  selector:
    app: prometheus
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        env:
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ORG_ROLE
          value: "Admin"
        - name: GF_AUTH_DISABLE_LOGIN_FORM
          value: "true"
        volumeMounts:
        - name: datasources
          mountPath: /etc/grafana/provisioning/datasources
      volumes:
      - name: datasources
        configMap:
          name: grafana-datasources
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: monitoring
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        url: http://prometheus:9090
        access: proxy
        isDefault: true
        editable: false
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
spec:
  type: NodePort
  ports:
  - port: 3000
    targetPort: 3000
    nodePort: 30300
    protocol: TCP
  selector:
    app: grafana
